
use category,
    errors,
    log,
    harness,
    blaster,
    turbo,
    float offset


engageBoosters of self with thrust,
                            angle  otherwise 0.0,
                            color  otherwise 'green':

	checksResult = preCheck blaster with angle, thrust

	info log with message: 'Hi {name}! Your favourite drink is {drink}.'

	turboState = state of turbo with { angle, thrust,
	                                   size: usage of self } otherwise default 'poor'

	when turboState
		is 'good':
			info log with message: 'Turbo is go!'
			result launchBoosters of self with angle, thrust, turboState

		is 'okay':
			warning log with message: 'Turbo is iffy :/'
			result launchBoosters of self with angle, thrust, turboState

		otherwise:
			result 'stopped'


square of x:
	result x * x


launchBoosters of self with thrust,
                            angle      otherwise 0.0,
                            turboState otherwise 'unknown':

	variable = new of category.data
	variable.stage = 0

	numbers = [1, 2, 3]

	variable.cache = resultFromEach of numbers with square

	note:`This hypothetically adds square method temporarily on each number then invokes it.
	      It possibly reduces the need for functions by a lot, or even entirely.`
	variable.cache = resultFromEach of numbers with square

	for every x in turbo,
		variable.stage =+ 1
		engage turbo with thruster: x

	result boost blaster with { stage:. variable, thrust,
	                            angle, offset, color } otherwise default 'done'

