
using categories, errors, log, harness, blaster, turbo, offset

engageBoosters with thrust, angle otherwise 0.0, color otherwise 'green':
	variable = {}
	variable.stage = 0

	checksResult = preCheck blaster with angle, thrust
	variable.stage += 1

	info log with message: `Pre-checks complete! {checksResult}`

	ableToTurbo = isSufficient turbo with { angle, thrust, size: usage of self }
		otherwise default no

	if not ableToTurbo:
		variable.stage += 2
		returns 'abort'

	z = getOrSubstitute variable with name: 'stage', substitute: 9

	variable.cache = map [1, 2, 3] with mapping: (function of x: returns x * x)
	variable.cache = [x * x for x in [1, 2, 3] if x > 1]

	status = 'green light' if ableToTurbo or else 'red light'

	for x in iterator of turbo:
		variable.stage += 1

	returns boost blaster with stage.: variable, thrust, angle, offset, color
